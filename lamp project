//Our final project code
// PSEUDOCODE
/*
global variable lampMode;
#include <LiquidCrystal.h>;
LiquidCrystal lcd(7,8,9,10,11,12);





void performButtonChecks ()
{
	if ( ( (ir button 1 = pressed) || (bluetooth button 1 = pressed) ) || (button 1 = pressed) )
		lampMode = 1
	else if ( ( (ir button 2 = pressed) || (bluetooth button 2 = pressed) ) || (button 2 = pressed) )
		lampMode = 2
	else if ( ( (ir button 3 = pressed) || (bluetooth button 3 = pressed) ) || (button 3 = pressed) )
		lampMode = 3
}


void setup()
{

lcd.begin(16,2); //sets lcd rows and columns
lcd.setCursor(0,0);
	
	lcd.print "Turn off lights and press 1"
	while ( (ir button is NOT pressed) AND (bluetooth button is NOT pressed) AND (button is NOT pressed) )
	{
		delay(1000);
	}
	current light level = roomONlampOFF

	delay(500)
	lampPin = HIGH
	delay(500)
	current light level = roomONlampON
	delay(500)
	lampPin = LOW

	lcd.print "Turn off lights and press 1"
	while (ir button is NOT pressed)
	{
		delay(1000)
	}
	current light level = roomLightOff

	delay(500)
	lampPin = HIGH
	delay(500)
	current light level = roomOFFlampON
	delay(500)
	lampPin = LOW
	lampMode = 3
}

loop
{
	while (lampMode = 1)
	{
		lampPin = HIGH
		performButtonCheck
		delay(1000)
	}



	while (lampMode = 2)
	{
		lampPin = LOW
		performButtonCheck
		delay(1000)
	}



	while (lampMode = 3)
	{
		if (current light level < conditional level)
		{
			lampPin = HIGH
			if (NO motion detected)
			{
				for (int i = 0; i < 30; i++)
				{
					lcd.print "No user detected, powering off in "
					lcd.print (30 - i)
					lcd.print " seconds."
					delay(1000)
					performButtonCheck
					if (motion detected)
						break;
					else if (current light level > conditional level)
						break;
					if (i = 30)
						lampMode = 4 (standby mode);
				}
			}
		}
		else // (current light level > conditional level)
		{
			lampPin = LOW
		}
	}



	while (lampMode = 4)
	{
		lampPin = LOW
		performButtonCheck
		if ( (motion detected) || (light level > conditional level) )
		{
			lampMode = 3
		}
	}
}	
*/
